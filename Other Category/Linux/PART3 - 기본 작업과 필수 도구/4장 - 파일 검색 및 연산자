1.

  locate    : 파일명으로 파일 위치 찾기
              locate db는 updatedb라는 또 다른 프로그램으로 이루어지는데, locate는 최신 파일을 검색하지 못한다. 따라서 관리자 권한으로 updatedb를 해준 후 작업을 하여야 한다.

              zip으로 시작하는 모든 프로그램 찾기
              locate bin/zip

  find      : 디렉토리 트리 내에서 파일 검색하기
              locate 프로그램은 오로지 파일명에 근거하여 파일을 찾을 수 있지만 find 프로그램은 다양한 속성에 근거하여 주어진 디렉토리(하위 디렉토리를 포함하여)를 검색하여 파일을 찾는다.

          1) 테스트
              find ~ -type f -name ".JPG" -size +1M | wc -l

              -type
              b : 블록 특수 파일
              c : 문자 특수 파일
              d : 디렉토리
              f : 파일
              l : 심볼릭 링크 파일

              -name "*.JPG"
              -size +1M
              b : 512바이트 단위의 블록(기본값)
              c : 바이트
              w : 2바이트 크기의 워드
              k : 킬로바이트(1024바이트)
              M : 메가바이트
              G : 기가바이트
              -cmin n   : 정확히 n분 전에 속성 변경된 파일 (-/+ : 이전/이후)
              -cnewer file : file보다 더 최근에 변경된 파일
              -ctime n     : n*24시간 전에 변경된 파일
              -empty      : 빈 파일이나 디렉토리
              -group name : group에 속한 파일, 디렉토리
              -iname pattern : 대소문자를 구분하지 않는 name이다.
              -inum n   : n번 inode에 해당하는 파일 검색
              -mmin n : n분 전에 내용이 변경된 파일
              -mtime n : n*24시간 이전에 내용이 변경된 파일
              -name pattern : 패턴과 일치하는 파일
              -nouser : 유효 사용자에게 속하지 않은 파일과 디렉토리 검색
              -nogroup : 유효한 그룹에 ~
              -perm mode : 지정된 mode로 퍼미션이 설정된 파일 검색. 8진법이나 심볼릭 기호
              -user name : name 사용자에 속한 파일 검색

          2) 액션
              -미리 정의된 액션
                delete   : 현재 검색된 파일을 삭제한다
                ls       : 검색된 파일에 대하여 ls -dils와 같은 명령을 실행
                            dils ; 디렉토리, 인덱스넘버, 롱리스팅, 사이즈
                print    : 검색 결과의 전체 경로명 출력, 별도 액션이 없으면 기본값임
                quit     : 검새 조건에 해당하는 결과가 하나라도 나올 경우 검색 종료

                find ~ -type f -name '*.BAK' -print
                위 명령어를 풀어쓰면,
                find ~ -type f -and -name '*.BAK' -and -print
                이 때,
                print는 앞의 두 연산자가 참일 경우,
                name은 앞의 type이 참일 경우,
                type은 항상 수행된다.

             -사용자 정의 액션
              -exec command {};
              -exec rm '{}' ';'
              -ok 를 사용하면 실행 전 확인한다
              find ~ -type f -name 'a*' -ok ls -l '{}' ';'    명령을 각자 실행
              find ~ -type f -name 'a*' -ok ls -l '{}' +      명령을 한 번에 실행

              find playground \(-type f -not -perm 0600 -exec chmod 0600 '{}' ';'\) -or \(-type d -not perm 0700 -exec chmod 0700 '{}' ';' \)


          3) 옵션
            find의 검색 범위를 설정할 때 사용된다.
              depth           : 디렉토리 자체 이전에 디렉토리의 파일에 대하여 find를 우선 실행하도록 한다. 이 옵션은 -delete 액션이 지정될 때 자동적으로 적용된다
              maxdepth Levels : 테스트와 액션을 실행할 때, find 명령의 대상이 되는 디렉토리 최대 탐색 깊이를 숫자로 지정한다
              mindepth Levels : 디렉토리 최소 탐색 깊이를 지정한다
              mount           : 다른 파일시스템에 마운트된 디렉토리의 탐색은 제외한다
              noleaf          : 유닉스형 파일시스템을 검색한다는 가정하에 find에 최적화를 사용하지 않는다.


  xargs     : 표준 입력으로부터 인자 목록을 만들고 실행하기
              find ~ -type f -name 'a*' -print | xargs ls -l
              표준 입력으로부터 입력 받아서 목록으로 변환

              * 스페이스가 있을 경우,
              find 명령어는 null 문자로 구분된 출력 결과를 만드는 -print0을 지원하고
              xargs명령어는 null 문자로 구분된 입력을 허용하는 -null을 지원한다.
              find ~ -iname '*.jpg' -print0 | xargs -null ls -l


  touch     : 파일 시간을 변경하기
               touch에 인자가 존재하지 않을 경우, 새로운 빈 파일을 만든다.
  stat      : 파일이나 파일시스템 상태 표시하기



  2. 연산자
    연산자 : (file with bad perms) -or (directory with bad perms)
    -and  : and 연산, -a
    -or   : or 연산, -o
    -not  : not 연산, -!
    () : 우선순위를 위한 괄호

    ** expr1 -operator expr2
    expr1 실행 결과         연산자       expr2 수행여부
    참                    -and            실행 O
    거짓                  -and            실행 X
    참                    -or             실행 X
    거짓                  -or             실행 O

    이와같이 동작하는 이유는 검색 성능을 개선하기 위함이다.
