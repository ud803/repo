1. vi를 왜 배워야 할까
  1) vi는 어디에서나 사용할 수 있다. 그래픽 환경이 지원되지 않은 시스템을 접하게 됐을 때!
    nano의 인기도 갈수록 높아지고 있지만 유닉스 시스템상의 프로그램 호환성 표준인 POSIX는 vi를 필요로 한다.
  2) vi는 가볍고 빠륻. 숙련된 사용자는 편집하는 동안 마우스를 절대 사용하지 않는다.

  ~ 표시는 해당 줄이 비어있다는 뜻이다.
  vi는 모달 편집기(modal editor)이다. vi가 실행되면 명령어 모드로 시작된다.

2.
  :q          : 종료
  :q!         : 강제종료
  i           : 편집 모드
  vi foo.txt  : 파일 생성
  esc         : 명령어 모드로 돌아가기
  :w          : 세이브
  :w foo1.txt : 다른 이름으로 저장 (하지만! 편집 중인 현재 파일명은 변경되지 않는다. 따라서 편집을 계속하게 되면 foo.txt를 수정하는 것이지 foo1.txt를 수정하는 것이 아님!)
  ZZ          : 세이브 및 종료
  a           : 텍스트 덧붙이기
  J           : 줄 합치기
  A           : 줄의 맨 끝에 텍스트 덧붙이기
  o           : 현재 줄 아래에 빈 줄 추가
  O           : 현재 줄 위에 빈 줄 추가
  x           : 현재 위치의 문자 삭제
                3x : 현재 문자를 포함한 다음 2개 문자
                dd : 현재 줄
                dW : 현재 커서 위치부터 다음 단어 앞까지
                d$ : 현재 커서 위치부터 현재 줄 끝까지
                d0 : 현재 커서 위치부터 현재 줄 맨 앞까지
                dG : 현재 줄부터 그 파일 끝까지
                d20G: 현재 줄부터 파일의 20번째 주까지
  D           : 일반 삭제
  p           : 삭제된 내용 붙이기
                yy : 현재 줄 복사
  /string     : string 검색
  :%s/Line/line/g : 치환 Line > line
                :   ex 명령어 실행
                %   작업을 수행할 줄 범위 (%는 첫번째 줄부터 마지막 줄까지) ex. 1, 5 1, $
                s   작업을 지정. 치환 작업
                /Line/line/ 검색 패턴과 바꾸고자 하는 텍스트
                g   전체를 의미. g를 사용하지 않으면 각 줄마자 첫 번째 검색 문자열만 변경
                c   뒤에 c를 붙이면 각각의 치환 전에 사용자에게 확인한다
                    y 치환 실행
                    n 건너 뛰기
                    a 전체 치환 실행
                    q 중단
                    l(last) 이번 치환 후 종료
                    ctrle, ctrly 스크롤 위아래로 이동하기

  1) 커서 이동
    L / 오른쪽 방향키   : 오른쪽 한 문자
    H / 왼쪽 방향키    : 왼쪽 한 문자
    J / 아래쪽 방향키   : 한 줄 아래로
    K / 위쪽 방향키    : 한 줄 위로
    0 (zero)         : 현재 줄 처음으로
    shift-6(^)       : 현재 줄 첫 번째 공백이 아닌 글자로
    shift-4($)       : 현재 줄 마지막으로
    W                : 다음 단어나 구두점 기호 처음으로
    shift-W(W)       : 다음 단어 처음으로, 구두점 기호 무시
    B                : 이전 단어나 구두점 기호 처음으로
    shift-B(B)       : 이전 단어 처음으로, 구두점 기호 무시
    ctrl-f / pagedown: 한 페이지 아래로
    ctrl-b / pageup  : 한 페이지 위로
    nmber-shift-g    : 줄 번호로 이동
    shift-G(G)       : 파일의 마지막 줄로



3. 다중 파일 편집
  vi file1 file2 ... 을 통해 여러 파일을 수정할 수 있다.

    :n  : 다음 파일 전환
    :N  : 이전 파일 전환
    :e  : 수정 중 다른 파일 띄우기 (:n이나 :N으로 전환 불가!)
    :r  : (read)의 준말, 지정한 파일을 커서 위치 바로 앞에 삽입한다.
