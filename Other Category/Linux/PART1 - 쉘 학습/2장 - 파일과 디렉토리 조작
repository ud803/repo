1. 파일 조작

  mkdir : 디렉토리 새로 만들기

  cp    : 파일 및 디렉토리 복사
            -a --archive     : 소유자 및 권한 정보까지 모두 복사
            -i --interactive : 덮어쓰기 전에 확인 메시지 보여줌!!
            -r --recursive   : 디렉토리와 그 안의 내용까지 복사할 때
            -u --update      : 디렉토리에 없거나 최신 버전인 파일만을 복사할 때
            -v --verbose     : 복사 완료 메시지 출력

            cp file1 fil2    : file1을 file2로 복사
            cp -i file1 fil2 : 덮어쓰기 여부
            cp file1 fil2 dir: fil1과 file2를 dir1으로 복사. 미리 존재해야함
            cp dir1/* dir2   : dir1 의 모든 파일을 di2로 복사. 미리 존재해야함
            cp -r dir1 dir2  : dir1 디렉토리와 그 안의 내용을 dir2로 복사. 새로 생성



  mv    : 파일 및 디렉토리 이동 / 이름바꾸기
            mv item1 item2   : item1 파일 또는 디렉토리를 item2로 이동, 이름 바꿈
            -i --interactive
            -u --update
            -v --verbose


  rm    : 파일 및 디렉토리 삭제
            -i --interactive
            -r --recursive   : 하위 디렉토리까지 삭제
            -f --force       : 존재하지 않는 파일은 무시. -i를 무시한다
            -v --verbose

  ln    : 하드 링크 또는 심볼릭 링크 만들기
          1) 하드 링크는 링크를 생성하는 기존 유닉스 방식이다. 기본적으로 하나의 파일에는 하나의 하드 링크가 있는데 그것이 바로 파일에 이름을 만들어주는 것이다. 하드 링크가 만들어질 때 그 파일에 대한 디렉토리가 곧바로 생성된다. 그러나 하드 링크에는 치명적인 약점 두 가지가 있다.

            - 파일시스템 외부에 있는 파일을 참조할 수 없다. 같은 디스크 파티션에 있는 파일이 아니면 참조할 수 없다.
            - 디렉토리를 참조할 수 없다.

          하드 링크는 파일이 두 부분으로 만들어진다고 생각하면 조금 도움이 된다. 즉 파일은 파일 내용을 담고 있는 데이터 영역과 파일 이름을 갖고 있는 이름 영역 두 가지이다. 시스템은 아이노드(inode)라고 불리는 디스크 블록 체인을 하나 할당하고 이것은 이름 영역과 연결 된다.

            ln file link     : 하드 링크 생성


          2) 심볼릭 링크는 참조될 파일이나 디렉토리를 가리키는 텍스트 포인터가 포함된 특수한 파일을 생성한다. 이러한 점에서 윈도우즈의 바로가기와 매우 흡사한 방식이다. 심볼릭 링크를 삭제하는 경우엔 링크만 삭제되고 파일은 남아 있다. (수정은 된다) 심볼릭 링크를 삭제하기 전에 파일을 지웠다면 링크는 살아있지만 링크는 '깨지게' 된다. 쉘에서 ls 명령어로 빨간색이나 다른 색상으로 깨진 링크를 볼 수 있다.

            ln -s item link  : 심볼릭 링크 생성


2. 와일드 카드

  *           : 모든 문자
  ?           : 모든 하나의 문자
  [characters]: characters 문자 셋에 포함된 문자
  [!characters]: 그렇지 않은 문자
  [[:class]]  : 지정된 문자 클래스에 포함된 문자
        -> 문자 클래스
            [:alnum:] : 모든 알파벳과 숫자 문자
            [:alpha:] : 모든 알파벳 문자
            [:digit:] : 모든 숫자
            [:lower:] : 모든 소문자
            [:upper:] : 모든 대문자

* 사용 예제

  *           : 모든 파일
  g*          : g로 시작하는 모든 파일
  b*.txt      : b로 시작하는 .txt 파일
  Data???     : Data로 시작하면서 뒤에 세 개의 문자가 있는 파일
  [abc]*      : a, b, c로 시작하는 모든 파일
  BACKUP.[0-9][0-9][0-9] : BACKUP으로 시작하면서 뒤에 정확히 세 개의 숫자가 있는 파일
  [[:upper:]]*: 대문자로 시작하는 모든 파일
  *[[:lower:]123] : 파일명이 소문자로 끝나거나 1, 2, 3으로 끝나는 파일
