1. 유닉스 계열 운영체제는 MS-DOS계열 운영체제와 여러모로 다르다. MS-DOS계열은 멀티태스킹 시스템도 아니고 멀티유저 시스템도 아니다.

이를 실제적으로 사용하기 위해서는 다른 사용자로부터 각 사용자를 보호하기 위한 방법이 필요하다. 한 사용자의 동작으로 인해 컴퓨터가 고장 나지 말아야 한다는 것이다. 이 장에서는 시스템 보안의 필수적인 부분을 살펴보고 다음 명령어들을 소개한다.

 id     : 사용자 id 정보를 표시
            우분투는 1000번부터 사용자 계정을 할당한다. 또한 우분투 사용자는 더 많은 그룹에 속해있는데, 이는 시스템 디바이스와 서비스에 대한 특권을 우분투가 관리하는 방식과 관련이 있다.

            사용자 계정은 /etc/passwd 파일에, 그룹은 /etc/group에 정의되어 있다.
            사용자 계정과 그룹이 생성되면 이 파일들은 사용자 비밀번호에 관련된 정보를 가진 /etc/shadow/에 덧붙여 수정된다.

 chmod  : 파일 모드 변경
            파일 또는 디렉토리의 모드를 변경하기 위해서는 chmod 명령어를 사용한다. 모드의 변경은 오직 파일 소유자나 슈퍼유저만이 가능하다. 8진법 표현과 문자 표현이 있다.
            chmod man 페이지에 더 자세하게 나와 있다. --recursive는 하위에 모두 적용

            -8진법 표현 : chmod 600 foo.txt
              0       000       ---
              1       001       --x
              2       010       -w-
              3       011       -wx
              4       100       r--
              5       101       r-x
              6       110       rw-
              7       111       rwx

              chmod 755 file_name

            -문자 표현 : 다른 속성을 건드리지 않고 하나의 속성만을 설정할 수 있다는 이점
              u : user의 약자로, 파일이나 디렉토리의 소유자 의미
              g : 그룹 소유자
              o : other의 약자로, 기타 사용자를 의미
              a : all의 약자로, u,g,o의 조합

              +/- : 추가하거나 제거
              =   : 지정된 퍼미션만 적용되고 나머지 것들은 제거

              r,w,x : 기존의 퍼미션 의미

              ex)
              u+x : 소유자에게 실행 권한 추가
              u-x : 소유자에게 실행 권한 제거
              +x  : 모든 사용자에게 실행 권한 추가
              go=rw: 그룹 소유자와 기타 사용자에게 읽기, 쓰기만 가능
              u+x, go=rw : 복수 지정




 umask  : 파일이 생성될 때 주어질 기본 퍼미션 설정
          숫자 4개를 각각 2진수로 보았을 때, 1은 그 기능을 끈다는 의미!

              umask = 0022
              원래 파일 모드  --- rw- rw- rw-
              마스크         000 000 010 010
              결과          --- rw- r-- r--

          *특수 퍼미션
          네 자리인 이유는, rwx 외에 다른 기능이 있기 때문이다.

          1)setuid 비트 (8진수 4000) : 이를 파일 실행에 적용하면 실사용자에서 프로그램 소유자의 ID로 유효 사용자 ID가 변경된다. 일반 사용자가 그 프로그램을 실행하면 setuid root가 되고, 그 프로그램은 슈퍼유저의 특권을 가지고 실행. 사용자의 접근이 금지된 파일과 디렉토리에 접근 가능하게끔 해준다.

          2)setgid 비트 (8진수 2000) : 유효 그룹 ID를 사용자의 실제 그룹 ID에서 파일 소유자의 그룹 ID로 변경. 이는 일반 그룹의 멤버가 파일 소유자의 그룹과 상관없이 디렉토리 내의 모든 파일에 접근이 필요한 공유 디렉토리에 유용하다.

          3)sticky 비트 (8진수 1000) : 고대 유닉스의 유산으로, 스왑되지 말아야 하는 실행 파일에 표시 가능. 리눅스는 파일의 sticky 비트는 무시하지만, 디렉토리에 적용되면 디렉토리 소유자거나 파일 소유자 또는 슈퍼유저가 아닌 이상 사용자들은 파일을 삭제하거나 이름을 변경하지 못하도록 막는다. 이는 /tmp 디렉토리처럼 공용 디렉토리 접근에 주로 사용된다.

 su     : 다른 사용자로 쉘을 실행
          su [-[l]] [user]
          -l 옵션을 사용하면 반환된 쉘 세션은 이 명령에 지정된 사용자를 위한 로그인 쉘이 된다. 이는 해당 사용자 환경이 로드되고 작업 디렉토리가 그 사용자의 홈 디렉토리로 변경됨을 의미한다. -l은 -로 줄여쓸 수 있다.

          su -를 통해 슈퍼유저로 접속 가능 (사용자를 지정하지 않으면 슈퍼유저)
          su c 'command' 단일 명령어 수행 가능

 sudo   : 다른 사용자로 명령어를 실행
          sudo 명령어는 대부분 su와 비슷하지만 중요한 추가기능이 있다. 관리자는 매우 통제된 방법하에서 일반 사용자가 다른 사용자로 명령을 실행하게끔 sudo를 설정할 수 있다. 또 다른 중요한 차이점은 sudo는 슈퍼유저의 비밀번호를 요구하지 않는다는 점이다.
          그리고 sudo는 새로운 쉘을 시작하지 않는다. 또한 다른 사용자의 환경도 로드하지 않는다.

          sudo로 허용된 특권은 sudo -l로 확인할 수 있다.
          sudo의 환경설정에는 '신뢰할 수 있는 시간'이 지정되어 있어 여러 명령어를 동시에 가능

 chown  : 파일 소유자 변경
          파일 또는 디렉토리의 소유자와 그룹 소유자를 변경하는 데 사용된다. 이 명령어는 슈퍼유저 권한이 필요하다.

          chown [owner][:[group]] file ...

          bob       : 파일의 소유권을 bob으로 변경
          bob:users : 파일의 소유권을 bob으로 변경, 그룹 소유자를 users 그룹으로 변경
          :admins   : 파일 소유자를 admins 그룹으로 변경
          bob:      : 파일 소유자를 bob으로, 그룹 소유자는 bob의 로그인 그룹으로 변경

 chgrp  : 파일 그룹 소유자 변경
          chown의 제한된 버전

 passwd : 사용자 비밀번호 변경
          passwd [user] : 사용자의 비밀번호 변경




2. 유닉스 보안 모델에서 사용자는 파일과 디렉토리를 소유할 수 있다. 사용자가 파일 또는 디렉토리를 소유할 때, 그 사용자는 소유물의 접근을 제어한다. 또한 사용자들은 한 명 이상으로 구성된 그룹에 속할 수 있다. 같은 그룹 사용자들은 그 소유자에 의해 파일과 디렉토리에 접근 권한을 얻는다. 또한 소유자는 모든 사용자(유닉스 용어로는 world)에게 접근 권한을 일부 줄 수 있다.

  1) 읽기, 쓰기, 실행
  파일과 디렉토리의 접근권은 읽기, 쓰기, 실행 권한으로 정의된다. ls 명령어의 출력 결과를 통해 그 단서를 얻을 수 있다.

  처음 10개의 문자는 파일 속성을 나열한 것이다.
  첫 문자는 파일 종류(file type)을 나타내고, 나머지 9개 문자는 파일 모드(file mode)이다.
  파일 모드는 파일 소유자, 파일 소유 그룹, 기타 사용자에 대한 각각의 권한을 나타낸다.

    -파일 종류
      - : 일반 파일
      d : 디렉토리
      l : 심볼릭 링크 (심볼릭 링크의 속성은 항상 rwxrwxrwx이고 이는 더미 값이다)
      c : 문자 특수 파일 (바이트의 열로 데이터를 처리하는 디바이스)
      b : 블록 특수 파일 (하드드라이브나 cd-rom같이 블록 단위의 데이터를 처리하는 디바이스)

    -파일 모드
    (파일)
      r : 파일 열기와 읽기 허용
      w : 파일 쓰기, 잘라내기 허용 / 이름 변경, 파일 삭제 불허용, 파일 삭제나 파일 이름 변경은 디렉토리 속성에 의해 결정된다
      x : 파일이 실행되도록 허용. 스크립트 언어에서 작성된 프로그램 파일들은 읽기 가능으로 설정되어 있어야만 실행 가능하다
    (디렉토리)
      r : 실행 속성이 설정되어 있으면 디렉토리의 내용물 나열 허용
      w : 실행 속성이 설정되어 있으면 디렉토리 내의 파일 생성, 삭제, 이름 변경 가능
      x : 디렉토리에 들어올 수 있도록 허용 ( ex : cd directory )


3. 그룹 관련
      groupadd [name]    : 그룹 추가
      groupdel [name]    : 그룹 삭제
      groups             : 그룹 확인
      gpasswd            : 그룹 관리(패스워드 설정)
          -a user : 특정 그룹에 새로운 멤버 추가 ex) gpasswd -a user group
          -d user : 멤버 제거
          -r      : 그룹의 패스워드 제거
          -R      : 그룹에 접근 제한
          -A user : 특정 그룹의 그룹관리자를 설정 ex) gpasswd -A user group
          -M user : 특정 그룹의 그룹멤버 설정(기존 멤버 삭제)
