우리는 이번 장에서 보고서 생성 프로그램을 만들 것이다. 이 프로그램은 시스템의 상태 정보를 보여주는 것으로, HTML 형식을 보고서를 작성하여 웹 브라우저를 통해 확인할 수 있도록 한다.

1. 1단계 : 간단한 HTML 문서 만들기

<HTML>
  <HEAD>
    <TITLE> page title </TITLE>
  <BODY>
</HTML>
을 입력한 후, foo.html로 저장한다. 그 후 웹 브라우저에서 file:///home/uidam/exercise/foo.html을 통해 실행한다.

vim에 echo를 통해 HTML스크립트를 작성한 후, sys_info_page로 저장한다
이 프로그램은 표준 출력을 제공하는데,
sys_info_page > sys_info_page.html을 통해 html파일로 출력을 재지정하고
firefox sys_info_page.html 을 통해 브라우저에서 실행시킨다.

또한, echo로 한 따옴표 안에 묶을 수 있다.

2. 2단계 : 데이터 입력해보기
  <TITLE> System Information Report </TITLE>
  <H1> System Information Report </H1>

  1) 변수와 상수
    title="System Information Report"
    $title로 변수 호출
    변수 이름을 지정하는 데 몇 가지 규칙이 있다
      -변수명은 알파벳, 숫자, 밑줄 기호로 구성됨
      -변수명의 첫 글자는 반드시 문자 또는 밑줄로 시작
      -공백 및 구두점 사용 금지
    쉘은 변수와 상수를 따로 구분하지 않는다. 이러한 용어 구분은 프로그래머의 편의를 위함이고, 일밙거으로 상수를 정의할 때는 대문자를, 변수는 소문자를 사용한다.

    TITLE="System information report for $HOSTNAME"

    *상수의 값이 바뀌지 않도록 설정하려면
    declare -r TITLE="This is a CONSTANT" 라고 하면 된다!
    -r은 읽기 전용 옵션을 의미


  2) 변수와 상수에 값 할당
    다른 프로그래밍 언어와 달리, 쉘은 변수에 할당되는 값의 데이터 형식을 전혀 고려하지 않고 모두 문자열로 인식한다. 물론 declare 명령어와 -i 옵션을 사용하여 정수 값으로도 선언할 수 있다. 하지만 읽기 전용 옵션을 적용한 변수를 설정하는 것이 흔치 않은 것처럼 이 또한 잘 사용되지 않는다.
    변수 할당의 예는 다음과 같다
      a=z
      b="a string"
      c="a string and $b"
      d=$(ls -l foo.txt)
      e=$((5*7))
      f="\t\ta string\n"

      a=5 b="a string" 한 줄에 여러 변수 정의 가능

    **중괄호의 사용
    filename="myfile"
    touch $filename
    mv $filename $filename1 (에러)
    mv $filename ${filename}1 (myfile1으로 정상 변경)



3. Here 문서 (Here Documents)
우리는 지금까지 텍스트를 출력하는 두 방법에 대해서 공부했다. 이 두 방법 모두 echo 명령어를 사용했다. 이번에는 here 문서 혹은 here 스크립트라고 하는 세 번째 방법에 대해서 알아보자. here문서는 I/O 리다이렉션의 추가적인 형태로 텍스트 본문을 스크립트에 삽입할 때 그리고 명령어의 표준 입력으로 보낼 때 사용한다. 다음과 같이 사용된다.

  command << token
  text
  token

command는 표준 입력을 허용하는 명령어 이름이고, token은 삽입할 텍스트의 끝을 가리키는 문자열을 말한다.

cat << _EOF_
<HTML>
...
</HTML>
_EOF_             EOF토큰으로 구분된 텍스트를 cat으로 내보낸다.

here문서의 장점은 무엇일까? 쉘은 인용 기호를 전혀 신경 쓰지 않지만, here 문서에서는 자유롭게 인용 기호를 사용할 수 있고, 보고서 프로그램에서는 아주 유용하기 때문이다.


***다음은 ftp서버에서 파일을 가져오기 위해 일련의 명령어를 전송하는 here문서를 활용한 예제다.

  #!/bin/bash

  #Script to retrieve a file via FTP

  FTP_SERVER=ftp.nl.debian.org
  FTP_PATH=/debian/dists/lenny/main/installer-i386/current/images/cdrom
  REMOTE_FILE=debian-cd_info.tar.gz

  ftp-n << _EOF_
  open $FTP_SERVER
  user anonymous me@linuxbox
  cd $FTP_PATH
  hash
  get $REMOTE_FILE
  bye
  _EOF_

여기서 리다이렉션 기호인 <<를 <<-로 바꾸면 쉘은 here문서에서의 선행되어 나오는 탭 기호들을 무시하게 된다. 따라서 here문서에서 가독성을 향상시키기 위해 들여쓰기가 가능해진다!!
