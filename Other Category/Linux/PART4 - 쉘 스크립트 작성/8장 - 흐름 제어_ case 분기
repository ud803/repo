우리는 간단한 메뉴 구성을 위해 if 명령어를 사용했었다. 이런 방식의 구성은 여러 프로그램에서 자주 볼 수 있는데, 다중 선택을 위한 흐름 제어 기법이 별도로 존재한다.


1. Case
bash의 다중 선택 합성 명령어는 case라고 하며, 다음 문법을 따른다.

  case word in
      [pattern [| pattern] ...) commands ;;]...
  esac

앞서 만든 메뉴 설정 코드를 case를 사용하여 더 간단하게 구성할 수 있다.

        case $REPLY in
          0) echo ~
             exit
              ;;

          1) echo ~
              ;;

          3) echo ~
              ;;
          *) echo ~
              invalid entry >2
              exit 1
              ;;
case 명령어는 단어의 값을 확인하고 그 값과 일치하는 패턴을 찾는다. 일치하는 패턴이 있으면 해당 패턴의 명령을 실행하고, 패턴을 찾은 후에는 더 이상 패턴을 찾지 않는다.

  1) 패턴
  case에서 사용하는 패턴은 경로명 확장에서 사용되는 패턴과 동일하다. 이 패턴들은 ) 문자로 끝난다.
    a)            a와 일치하는 단어
    [[:alpha:]])  하나의 알파벳 문자와 일치하는 단어
    ???)          정확히 세 글자로 이루어진 단어
    *.txt)        .txt 문자열로 끝나는 단어
    *)            모든 단어. 이는 case 명령어의 마지막 패턴으로 사용된다.
                  else와 같은 의미. 즉 유효하지 않은 값을 처리하기 위함

  2) 패턴 결합
  수직바를 구분자료 사용하여 여러 패턴들을 결합하여 사용하는 것도 가능하다. 이것은 OR 조건의 패턴을 생성한다.

          case $REPLY in
              q|Q) echo ~
                    ;;
              a|A) echo ~
                    ;;
              *)    ~
                    ;;
                    
